<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:m="using:CanvasCode.Models"
        xmlns:vm="using:CanvasCode.ViewModels"
        xmlns:v="clr-namespace:CanvasCode.Views"
        xmlns:cwv="clr-namespace:CanvasCode.Views.CanvasWindows"
        xmlns:cwvm="clr-namespace:CanvasCode.ViewModels.CanvasWindows"
        xmlns:converters="clr-namespace:CanvasCode.Converters"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Xaml.Behaviors.Interactivity"
        xmlns:localBehaviours="clr-namespace:CanvasCode.Behaviours"
        xmlns:behaviours="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Xaml.Behaviors.Interactions"
        xmlns:controls="using:CanvasCode.Controls"
        xmlns:paz="using:Avalonia.Controls.PanAndZoom"
        mc:Ignorable="d" d:DesignWidth="1920" d:DesignHeight="1080"
        x:Class="CanvasCode.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="CanvasCode">

    <Window.Resources>
        <converters:FileModelToIconConverter x:Key="FileToIconConverter"/>
        <converters:FileModelToColorConverter x:Key="FileToColorConverter"/>
    </Window.Resources>
    
    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel />
    </Design.DataContext>

    <Grid>
        <Grid IsVisible="{Binding !IsFullscreen}">
            <controls:Shader x:Name="CanvasShader" ShaderUri="avares://CanvasCode/Assets/Shaders/CanvasBG.sksl" Stretch="Fill" IsAnimated="True" AnimationFrameRate="5"/>

            <paz:ZoomBorder x:Name="MainCanvas" PointerPressed="MainCanvas_OnPointerPressed" PointerReleased="MainCanvas_OnPointerReleased" PointerMoved="MainCanvas_OnPointerMoved" ZoomChanged="MainCanvas_OnZoomChanged"
                            Stretch="None" ClipToBounds="True" Focusable="True" PanButton="Left" MinZoomX="0.1" MinZoomY="0.1" MaxZoomX="10" MaxZoomY="10" 
                            DragDrop.AllowDrop="True">
                
                <ItemsControl x:Name="WindowsItemsControl" ItemsSource="{Binding Windows}" ClipToBounds="False">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas PointerPressed="Canvas_OnPointerPressed"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <cwv:CanvasWindowView Width="{Binding Size.Width}" MinWidth="300" MinHeight="300"
                                                  Height="{Binding Size.Height}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    
                    <ItemsControl.ItemContainerTheme>
                        <ControlTheme TargetType="ContentPresenter" x:DataType="cwvm:CanvasWindowViewModel">
                            <Setter Property="Canvas.Left" Value="{Binding Position.X}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Position.Y}"/>
                        </ControlTheme>
                    </ItemsControl.ItemContainerTheme>
                </ItemsControl>
                
                <paz:ZoomBorder.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Open new window" Command="{Binding OpenNewWindowCommand}"/>
                    </ContextMenu>
                </paz:ZoomBorder.ContextMenu>
            </paz:ZoomBorder>
        </Grid>
        
        <ContentControl Content="{Binding FullscreenContent}" IsVisible="{Binding IsFullscreen}"/>
    </Grid>
</Window>