<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:m="using:CanvasCode.Models"
        xmlns:vm="using:CanvasCode.ViewModels"
        xmlns:v="clr-namespace:CanvasCode.Views"
        xmlns:cwv="clr-namespace:CanvasCode.Views.CanvasWindows"
        xmlns:cwvm="clr-namespace:CanvasCode.ViewModels.CanvasWindows"
        xmlns:converters="clr-namespace:CanvasCode.Converters"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Xaml.Behaviors.Interactivity"
        xmlns:localBehaviours="clr-namespace:CanvasCode.Behaviours"
        xmlns:behaviours="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Xaml.Behaviors.Interactions"
        xmlns:controls="using:CanvasCode.Controls"
        xmlns:paz="using:Avalonia.Controls.PanAndZoom"
        mc:Ignorable="d" d:DesignWidth="1920" d:DesignHeight="1080"
        x:Class="CanvasCode.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="CanvasCode"
        SystemDecorations="None"
        ExtendClientAreaChromeHints="NoChrome"
        ExtendClientAreaToDecorationsHint="True">

    <Window.Resources>
        <converters:FileModelToIconConverter x:Key="FileToIconConverter"/>
        <converters:FileModelToColorConverter x:Key="FileToColorConverter"/>
    </Window.Resources>
    
    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel />
    </Design.DataContext>

    <Grid>
        <Grid IsVisible="{Binding !IsFullscreen}">
            <controls:Shader x:Name="CanvasShader" ShaderUri="avares://CanvasCode/Assets/Shaders/CanvasBG.sksl" Stretch="Fill" IsAnimated="True" AnimationFrameRate="5"/>

            <paz:ZoomBorder x:Name="MainCanvas" PointerPressed="MainCanvas_OnPointerPressed" PointerReleased="MainCanvas_OnPointerReleased" PointerMoved="MainCanvas_OnPointerMoved" ZoomChanged="MainCanvas_OnZoomChanged"
                            Stretch="None" ClipToBounds="True" Focusable="True" PanButton="Left" MinZoomX="0.1" MinZoomY="0.1" MaxZoomX="10" MaxZoomY="10" 
                            DragDrop.AllowDrop="True">
                
                <ItemsControl x:Name="WindowsItemsControl" ItemsSource="{Binding Windows}" ClipToBounds="False">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <cwv:CanvasWindowView Width="{Binding Size.Width}" MinWidth="300" MinHeight="300"
                                                  Height="{Binding Size.Height}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    
                    <ItemsControl.ItemContainerTheme>
                        <ControlTheme TargetType="ContentPresenter" x:DataType="cwvm:CanvasWindowViewModel">
                            <Setter Property="Canvas.Left" Value="{Binding Position.X}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Position.Y}"/>
                            <Setter Property="ZIndex" Value="{Binding ZIndex}"/>
                        </ControlTheme>
                    </ItemsControl.ItemContainerTheme>
                </ItemsControl>
                
                <paz:ZoomBorder.ContextMenu>
                    <ContextMenu HorizontalOffset="-80" VerticalOffset="-20" Padding="0" MinHeight="0" MinWidth="0"
                                 Background="{StaticResource PrimaryTransparentBackground}"
                                 Foreground="{StaticResource PrimaryText}"
                                 BorderBrush="{StaticResource PanelHighlight}"
                                 BorderThickness="2">
                        <MenuItem Foreground="{StaticResource PrimaryText}" Header="Open new window" Padding="30 15 10 15" Margin="-10" Command="{Binding OpenNewWindowCommand}"/>
                    </ContextMenu>
                </paz:ZoomBorder.ContextMenu>
            </paz:ZoomBorder>
        </Grid>
        
        <ItemsControl x:Name="PinnedWindowsItemsControl" ItemsSource="{Binding PinnedWindows}" ClipToBounds="False">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
                
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <cwv:CanvasWindowView Width="{Binding Size.Width}" MinWidth="300" MinHeight="300"
                                          Height="{Binding Size.Height}"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
                    
            <ItemsControl.ItemContainerTheme>
                <ControlTheme TargetType="ContentPresenter" x:DataType="cwvm:CanvasWindowViewModel">
                    <Setter Property="Canvas.Left" Value="{Binding Position.X}"/>
                    <Setter Property="Canvas.Top" Value="{Binding Position.Y}"/>
                    <Setter Property="ZIndex" Value="{Binding ZIndex}"/>
                </ControlTheme>
            </ItemsControl.ItemContainerTheme>
        </ItemsControl>
        
        <Panel Height="32" VerticalAlignment="Top" Classes="titleBar">
            <Grid ColumnDefinitions="*, Auto">
                <Border Grid.Column="0" Background="Transparent" PointerPressed="TitleBarDrag_OnPointerPressed" DoubleTapped="TogleMaximized_OnClick"/>
                
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <Button Classes="panelButton" CornerRadius="2" VerticalAlignment="Stretch"
                            Padding="8 0" Margin="0" Click="MinimizeButton_OnClick">
                        <Label Content="&#xE32A;" Classes="icon" FontSize="15" Padding="0" VerticalAlignment="Center"/>
                    </Button>
                    
                    <Button Classes="panelButton" CornerRadius="2" VerticalAlignment="Stretch"
                            Padding="8 0" Margin="0" Click="TogleMaximized_OnClick">
                        <Label Content="&#xE45E;" Classes="icon" FontSize="15" Padding="0" VerticalAlignment="Center"/>
                    </Button>
                    
                    <Button Classes="panelButton" CornerRadius="2" VerticalAlignment="Stretch"
                            Padding="8 0" Margin="0" Click="CloseWindow_OnClick">
                        <Label Content="&#xE4F6;" Classes="icon" FontSize="15" Padding="0" VerticalAlignment="Center"/>
                    </Button>
                </StackPanel>
            </Grid>
            
            <Panel.Styles>
                <Style Selector="Panel.titleBar">
                    <Setter Property="Background" Value="{StaticResource PrimaryTransparentBackground}"/>
                    <Setter Property="Opacity" Value="0"/>
                </Style>
                <Style Selector="Panel.titleBar:pointerover">
                    <Setter Property="Opacity" Value="1"/>
                </Style>
            </Panel.Styles>
        </Panel>
        
        <ContentControl Content="{Binding FullscreenContent}" IsVisible="{Binding IsFullscreen}"/>
    </Grid>
</Window>