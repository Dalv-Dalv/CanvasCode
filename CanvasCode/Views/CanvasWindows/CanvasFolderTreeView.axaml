<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:cwvm="clr-namespace:CanvasCode.ViewModels.CanvasWindows"
             xmlns:converters="clr-namespace:CanvasCode.Converters"
             xmlns:vm="clr-namespace:CanvasCode.ViewModels"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Xaml.Behaviors.Interactivity"
             xmlns:localBehaviours="clr-namespace:CanvasCode.Behaviours"
             xmlns:behaviours="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Xaml.Behaviors.Interactions"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="CanvasCode.Views.CanvasWindows.CanvasFolderTreeView"
             x:DataType="cwvm:CanvasFolderTreeViewModel"
             Background="Transparent">

    <Design.DataContext>
        <cwvm:CanvasFolderTreeViewModel />
    </Design.DataContext>

    <UserControl.Resources>
        <converters:FileModelToIconConverter x:Key="FileToIconConverter"/>
        <converters:FileModelToColorConverter x:Key="FileToColorConverter"/>
        <converters:PathStatusToErrorMessageConverter x:Key="ErrorMessageConverter"/>
    </UserControl.Resources>
    
    <Grid>
        <Border IsVisible="{Binding IsEmpty}">
            <StackPanel VerticalAlignment="Center" Spacing="30">
                <TextBlock HorizontalAlignment="Center" Foreground="{StaticResource SecondaryText}" TextWrapping="Wrap" TextAlignment="Center"
                           Text="{Binding PrevPath, Converter={StaticResource ErrorMessageConverter}}"/>
                <Button Command="{Binding OpenFolderCommand}" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="30 10">
                    Select Folder
                </Button>
            </StackPanel>
        </Border>
        <TreeView VerticalAlignment="Stretch" ItemsSource="{Binding OpenFolderRoots}" SelectionMode="Multiple"
                  KeyDown="TreeView_OnKeyDown" IsVisible="{Binding !IsEmpty}">
            <TreeView.ItemTemplate>
                <TreeDataTemplate x:DataType="vm:FileNodeViewModel" ItemsSource="{Binding Children}">
                    <Grid ColumnDefinitions="Auto, *" ColumnSpacing="4" PointerPressed="OnPointerPressed" PointerReleased="OnPointerReleased" PointerMoved="OnPointerMoved" Background="Transparent" DoubleTapped="TreeViewItem_OnDoubleTapped">
                            <Label Grid.Column="0" FontFamily="{StaticResource PhosphorRegular}" VerticalAlignment="Center" FontSize="15">
                                <Label.Foreground>
                                    <MultiBinding Converter="{StaticResource FileToColorConverter}">
                                        <Binding Path="Model.Name" /> <Binding Path="Model.IsDirectory" /> <Binding Path="Model.IsAccessible" />
                                    </MultiBinding>
                                </Label.Foreground>
                                <Label.Content>
                                    <MultiBinding Converter="{StaticResource FileToIconConverter}">
                                        <Binding Path="Model.Name" /> <Binding Path="Model.IsDirectory" /> <Binding Path="Model.IsAccessible" />
                                    </MultiBinding>
                                </Label.Content>
                            </Label>
                        
                            <TextBlock Grid.Column="1" Text="{Binding Model.Name}" VerticalAlignment="Center" FontSize="15"/>
                        </Grid>
                </TreeDataTemplate>
            </TreeView.ItemTemplate>

            <TreeView.Styles>
                <Style Selector="TreeViewItem" x:DataType="vm:FileNodeViewModel">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsEnabled" Value="{Binding Model.IsAccessible}" />

                    <Setter Property="DragDrop.AllowDrop" Value="True" />

                    <Setter Property="ContextMenu">
                        <ContextMenu Focusable="False">
                            <MenuItem Header="Add" Focusable="False">
                                <MenuItem Header="Folder" Command="{Binding AddFolderCommand}" Focusable="False">
                                    <MenuItem.Icon>
                                        <Label Classes="icon" Content="&#xE25A;" RenderTransform="scale(1.7)"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="File" Command="{Binding AddFileCommand}" Focusable="False">
                                    <MenuItem.Icon>
                                        <Label Classes="icon" Content="&#xE484;" RenderTransform="scale(1.7)"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </MenuItem>
                            <MenuItem Header="Rename" Command="{Binding StartRenameCommand}" IsEnabled="{Binding Model.IsAccessible}" Focusable="False"/>
                            <MenuItem Header="Delete" Command="{Binding DeleteCommand}" IsEnabled="{Binding Model.IsAccessible}" Focusable="False"/>
                            <Separator IsVisible="{Binding Model.IsDirectory}" Focusable="False"/>
                            <MenuItem Header="Refresh" Command="{Binding RefreshCommand}"
                                      IsVisible="{Binding Model.IsDirectory}" Focusable="False"/>
                        </ContextMenu>
                    </Setter>
                </Style>
                
                <Style Selector="TreeViewItem" x:DataType="vm:FileNodeViewModel">
                    <Setter Property="Classes.isDropTarget" Value="{Binding IsDropTarget}"/>
                </Style>
                
                <Style Selector="TreeViewItem.isDropTarget > Border#PART_ItemsBorder">
                    <Setter Property="BoxShadow" Value="inset 0 0 0 1 #3FFF0000"/>
                    <Setter Property="CornerRadius" Value="4"/>
                    <Setter Property="Background" Value="#1FFF0000"/>
                </Style>
            </TreeView.Styles>
        </TreeView>
        <Border Background="#2FFF0000" Margin="0" CornerRadius="4"
                BorderThickness="1" BorderBrush="#AFFF0000"
                IsVisible="{Binding IsDraggingOverRoot}"
                IsHitTestVisible="False"/>
    </Grid>

</UserControl>