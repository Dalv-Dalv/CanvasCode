<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:cwvm="clr-namespace:CanvasCode.ViewModels.CanvasWindows"
             xmlns:converters="clr-namespace:CanvasCode.Converters"
             xmlns:vm="clr-namespace:CanvasCode.ViewModels"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Xaml.Behaviors.Interactivity"
             xmlns:localBehaviours="clr-namespace:CanvasCode.Behaviours"
             xmlns:behaviours="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Xaml.Behaviors.Interactions"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="CanvasCode.Views.CanvasWindows.CanvasFolderTreeView"
             x:DataType="cwvm:CanvasFolderTreeViewModel">

    <Design.DataContext>
        <cwvm:CanvasFolderTreeViewModel />
    </Design.DataContext>

    <UserControl.Resources>
        <converters:FileModelToIconConverter x:Key="FileToIconConverter"/>
        <converters:FileModelToColorConverter x:Key="FileToColorConverter"/>
    </UserControl.Resources>
    
    <Grid>
        <Border IsVisible="{Binding IsEmpty}">
            <Button Command="{Binding OpenFolderCommand}" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="30 10">
                Select Folder
            </Button>
        </Border>
        <TreeView VerticalAlignment="Stretch" ItemsSource="{Binding OpenFolderRoots}" SelectionMode="Multiple"
                  KeyDown="TreeView_OnKeyDown" IsVisible="{Binding !IsEmpty}">
            <TreeView.ItemTemplate>
                <TreeDataTemplate x:DataType="vm:FileNodeViewModel" ItemsSource="{Binding Children}">
                    <Border Margin="0" Padding="0" Background="Transparent" PointerPressed="OnPointerPressed" PointerMoved="OnPointerMoved" Classes="fileBorder">
                        <Grid ColumnDefinitions="Auto, *" ColumnSpacing="4">
                            <Label Grid.Column="0" FontFamily="{StaticResource PhosphorRegular}" VerticalAlignment="Center" FontSize="15">
                                <Label.Foreground>
                                    <MultiBinding Converter="{StaticResource FileToColorConverter}">
                                        <Binding Path="Model.Name" /> <Binding Path="Model.IsDirectory" /> <Binding Path="Model.IsAccessible" />
                                    </MultiBinding>
                                </Label.Foreground>
                                <Label.Content>
                                    <MultiBinding Converter="{StaticResource FileToIconConverter}">
                                        <Binding Path="Model.Name" /> <Binding Path="Model.IsDirectory" /> <Binding Path="Model.IsAccessible" />
                                    </MultiBinding>
                                </Label.Content>
                            </Label>
                            <TextBlock Grid.Column="1" Text="{Binding Model.Name}"
                                       VerticalAlignment="Center" FontSize="15"
                                       IsVisible="{Binding !IsRenaming}" />
                            <TextBox Grid.Column="1" Text="{Binding Model.Name, Mode=OneWay}"
                                     VerticalAlignment="Center" FontSize="15"
                                     IsVisible="{Binding IsRenaming}"
                                     x:Name="RenameBox" MinHeight="0" Padding="0"
                                     KeyDown="RenameTextBox_OnKeyDown"
                                     TextInput="RenameBox_OnTextInput">

                                <i:Interaction.Behaviors>
                                    <localBehaviours:FocusOnVisibleBehaviour />
                                    <behaviours:EventTriggerBehavior EventName="LostFocus">
                                        <behaviours:InvokeCommandAction Command="{Binding CommitRenameCommand}"
                                                                        CommandParameter="{Binding #RenameBox.Text}" />
                                    </behaviours:EventTriggerBehavior>
                                </i:Interaction.Behaviors>
                            </TextBox>
                        </Grid>
                    </Border>
                </TreeDataTemplate>
            </TreeView.ItemTemplate>

            <TreeView.Styles>
                <Style Selector="TreeViewItem" x:DataType="vm:FileNodeViewModel">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsEnabled" Value="{Binding Model.IsAccessible}" />

                    <Setter Property="DragDrop.AllowDrop" Value="True" />

                    <Setter Property="ContextMenu">
                        <ContextMenu>
                            <MenuItem Header="Rename" Command="{Binding StartRenameCommand}" IsEnabled="{Binding Model.IsAccessible}" />
                            <MenuItem Header="Delete" Command="{Binding DeleteCommand}" IsEnabled="{Binding Model.IsAccessible}" />
                            <Separator IsVisible="{Binding Model.IsDirectory}" />
                            <MenuItem Header="Refresh" Command="{Binding RefreshCommand}"
                                      IsVisible="{Binding Model.IsDirectory}" />
                        </ContextMenu>
                    </Setter>
                </Style>
                <Style Selector="Border.fileBorder.dragOver" x:DataType="vm:FileNodeViewModel">
                    <Setter Property="BoxShadow" Value="inset 0 0 0 1 #CFFF0000"/>
                    <Setter Property="CornerRadius" Value="4"/>
                </Style>
            </TreeView.Styles>
        </TreeView>
    </Grid>

</UserControl>